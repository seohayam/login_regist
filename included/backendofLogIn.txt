流れ
ログイン機能

1
＞submitを確認
＞データベースと接続(database.phpを使用)
＞空欄の確認
＞あれば、ログイン画面へ
2
SELECT
＞なければ、SELECT
＞コネクションを初期化
＞準備ができていなければエラーと言う事でログインが目に戻る
＞できていれば、紐付け、実行
＞そして、現状のarrayをデータベースから引っ張ってくる変数を作る
3
CHECK PSSWORD
＞その変数を生成できれば、パスワードチェックをする(password_verify(postされたパスワード、さっき引っ張ってきた配列のパスワード部分);
＞パスワードチェックを変数として、if文にかける
＞条件を先にfalseを指定する（セキュリティー強化の為）
＞そのとおりならば、ホームに戻る
＞そうでないなら（パスワードがあっていたのなら）SESSIONスタート（header.phpに、session_start();宣言をする事）
＞配列の中にあるパスワードと、一致したのならば、配列の中のidとnameをSESSIONのグローバル関数にする
＞そうでなかったら、ホームに戻る
＞ホームでは、idのSESSIONがあるかを判別して、表示を変える









new function and new word
＞?の意味　なんでもオッケー（文字列）＝　ワイルドカード
WHERE name = ?

＞今の状況を初期化し、stmt_prepare（）で使用する変数を作ります。
mysqli_stmt_init();

＞準備
mysqli_stmt_prepare();

＞parameter=変数　つまり、変数をデータベースと紐付けする
データベースの名前（idやnameなど）を選んでそこを持ってくる
mysqli_bind_param();

＞excute=実行する
mysqli_stmt_excute();

＞現状のデータを保存する。また、データを取得するにはmysqli_fettch_arayをする必要がある
mysqli_stmt_store_result();

＞SELECTの値を返す
mysqli_stmt_get_result();

＞パスワードチェック
password_verify($_POST['passowrd'],データベースのパスワード部分);

＞今の状況のrowを数える
mysqli_stmt_num_row

＞パスワードを暗号化
password_hash($~,PASSWORD_DEFAULT);

＞現状のコネクションを閉じる
mysqli_stmt_close($~);

＞mysqliを閉じる
mysqli_close();